#pragma once

#include "mwl/mwl_input.hpp"

#include <map>
#include <cstdint>
#include <linux/input-event-codes.h>

namespace mwl {

    inline static const auto key_table = std::map<uint32_t, uint32_t> {

        { KEY_SPACE, MWL_KEY_SPACE },
        { KEY_APOSTROPHE, MWL_KEY_APOSTROPHE },
        { KEY_COMMA, MWL_KEY_COMMA },
        { KEY_MINUS, MWL_KEY_MINUS },
        { KEY_DOT, MWL_KEY_PERIOD },
        { KEY_SLASH, MWL_KEY_SLASH },
        { KEY_0, MWL_KEY_0 },
        { KEY_1, MWL_KEY_1 },
        { KEY_2, MWL_KEY_2 },
        { KEY_3, MWL_KEY_3 },
        { KEY_4, MWL_KEY_4 },
        { KEY_5, MWL_KEY_5 },
        { KEY_6, MWL_KEY_6 },
        { KEY_7, MWL_KEY_7 },
        { KEY_8, MWL_KEY_8 },
        { KEY_9, MWL_KEY_9 },
        { KEY_SEMICOLON, MWL_KEY_SEMICOLON },
        { KEY_EQUAL, MWL_KEY_EQUAL },
        { KEY_A, MWL_KEY_A },
        { KEY_B, MWL_KEY_B },
        { KEY_C, MWL_KEY_C },
        { KEY_D, MWL_KEY_D },
        { KEY_E, MWL_KEY_E },
        { KEY_F, MWL_KEY_F },
        { KEY_G, MWL_KEY_G },
        { KEY_H, MWL_KEY_H },
        { KEY_I, MWL_KEY_I },
        { KEY_J, MWL_KEY_J },
        { KEY_K, MWL_KEY_K },
        { KEY_L, MWL_KEY_L },
        { KEY_M, MWL_KEY_M },
        { KEY_N, MWL_KEY_N },
        { KEY_O, MWL_KEY_O },
        { KEY_P, MWL_KEY_P },
        { KEY_Q, MWL_KEY_Q },
        { KEY_R, MWL_KEY_R },
        { KEY_S, MWL_KEY_S },
        { KEY_T, MWL_KEY_T },
        { KEY_U, MWL_KEY_U },
        { KEY_V, MWL_KEY_V },
        { KEY_W, MWL_KEY_W },
        { KEY_X, MWL_KEY_X },
        { KEY_Y, MWL_KEY_Y },
        { KEY_Z, MWL_KEY_Z },
        { KEY_LEFTBRACE, MWL_KEY_LEFT_BRACKET },
        { KEY_BACKSLASH, MWL_KEY_BACKSLASH },
        { KEY_RIGHTBRACE, MWL_KEY_RIGHT_BRACKET },
        { KEY_GRAVE, MWL_KEY_GRAVE_ACCENT },
        { KEY_102ND, MWL_KEY_WORLD_2 },
        { KEY_ESC, MWL_KEY_ESCAPE },
        { KEY_ENTER, MWL_KEY_ENTER },
        { KEY_TAB, MWL_KEY_TAB },
        { KEY_BACKSPACE, MWL_KEY_BACKSPACE },
        { KEY_INSERT, MWL_KEY_INSERT },
        { KEY_DELETE, MWL_KEY_DELETE },
        { KEY_RIGHT, MWL_KEY_RIGHT },
        { KEY_LEFT, MWL_KEY_LEFT },
        { KEY_DOWN, MWL_KEY_DOWN },
        { KEY_UP, MWL_KEY_UP },
        { KEY_PAGEUP, MWL_KEY_PAGE_UP },
        { KEY_PAGEDOWN, MWL_KEY_PAGE_DOWN },
        { KEY_HOME, MWL_KEY_HOME },
        { KEY_END, MWL_KEY_END },
        { KEY_CAPSLOCK, MWL_KEY_CAPS_LOCK },
        { KEY_SCROLLLOCK, MWL_KEY_SCROLL_LOCK },
        { KEY_NUMLOCK, MWL_KEY_NUM_LOCK },
        { KEY_SYSRQ, MWL_KEY_PRINT_SCREEN },
        { KEY_PAUSE, MWL_KEY_PAUSE },
        { KEY_F1, MWL_KEY_F1 },
        { KEY_F2, MWL_KEY_F2 },
        { KEY_F3, MWL_KEY_F3 },
        { KEY_F4, MWL_KEY_F4 },
        { KEY_F5, MWL_KEY_F5 },
        { KEY_F6, MWL_KEY_F6 },
        { KEY_F7, MWL_KEY_F7 },
        { KEY_F8, MWL_KEY_F8 },
        { KEY_F9, MWL_KEY_F9 },
        { KEY_F10, MWL_KEY_F10 },
        { KEY_F11, MWL_KEY_F11 },
        { KEY_F12, MWL_KEY_F12 },
        { KEY_F13, MWL_KEY_F13 },
        { KEY_F14, MWL_KEY_F14 },
        { KEY_F15, MWL_KEY_F15 },
        { KEY_F16, MWL_KEY_F16 },
        { KEY_F17, MWL_KEY_F17 },
        { KEY_F18, MWL_KEY_F18 },
        { KEY_F19, MWL_KEY_F19 },
        { KEY_F20, MWL_KEY_F20 },
        { KEY_F21, MWL_KEY_F21 },
        { KEY_F22, MWL_KEY_F22 },
        { KEY_F23, MWL_KEY_F23 },
        { KEY_F24, MWL_KEY_F24 },
        { KEY_KP0, MWL_KEY_KP_0 },
        { KEY_KP1, MWL_KEY_KP_1 },
        { KEY_KP2, MWL_KEY_KP_2 },
        { KEY_KP3, MWL_KEY_KP_3 },
        { KEY_KP4, MWL_KEY_KP_4 },
        { KEY_KP5, MWL_KEY_KP_5 },
        { KEY_KP6, MWL_KEY_KP_6 },
        { KEY_KP7, MWL_KEY_KP_7 },
        { KEY_KP8, MWL_KEY_KP_8 },
        { KEY_KP9, MWL_KEY_KP_9 },
        { KEY_KPDOT, MWL_KEY_KP_DECIMAL },
        { KEY_KPSLASH, MWL_KEY_KP_DIVIDE },
        { KEY_KPASTERISK, MWL_KEY_KP_MULTIPLY },
        { KEY_KPMINUS, MWL_KEY_KP_SUBTRACT },
        { KEY_KPPLUS, MWL_KEY_KP_ADD },
        { KEY_KPENTER, MWL_KEY_KP_ENTER },
        { KEY_KPEQUAL, MWL_KEY_KP_EQUAL },
        { KEY_LEFTSHIFT, MWL_KEY_LEFT_SHIFT },
        { KEY_LEFTCTRL, MWL_KEY_LEFT_CONTROL },
        { KEY_LEFTALT, MWL_KEY_LEFT_ALT },
        { KEY_LEFTMETA, MWL_KEY_LEFT_SUPER },
        { KEY_RIGHTSHIFT, MWL_KEY_RIGHT_SHIFT },
        { KEY_RIGHTCTRL, MWL_KEY_RIGHT_CONTROL },
        { KEY_RIGHTALT, MWL_KEY_RIGHT_ALT },
        { KEY_RIGHTMETA, MWL_KEY_RIGHT_SUPER },
        { KEY_MENU, MWL_KEY_MENU },

    };

    inline static const auto button_table = std::map<uint32_t, uint32_t> {

        { BTN_LEFT, MWL_BUTTON_LEFT },
        { BTN_RIGHT, MWL_BUTTON_RIGHT },
        { BTN_MIDDLE, MWL_BUTTON_MIDDLE },
        { BTN_SIDE, MWL_BUTTON_SIDE },
        { BTN_EXTRA, MWL_BUTTON_EXTRA },
        { BTN_FORWARD, MWL_BUTTON_FORWARD },
        { BTN_BACK, MWL_BUTTON_BACK },
        { BTN_TASK, MWL_BUTTON_TASK },

    };

}
